on early-init
    start ueventd

# create mountpoints
    mkdir /mnt 0775 root system

# adb configuration 
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 0fce
    write /sys/class/android_usb/android0/idProduct 6169
    write /sys/class/android_usb/android0/functions mass_storage,adb
    write /sys/class/android_usb/android0/enable 1

on init

sysclktz 0
loglevel 3

# setup the global environment
    export PATH /sbin:/system/sbin:/system/bin:/system/xbin
    export LD_LIBRARY_PATH .:/vendor/lib:/sbin

    export ANDROID_CACHE /cache
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

# Create cgroup mount point for cpu accounting
    mkdir /acct
    mount cgroup none /acct cpuacct
    mkdir /acct/uid

    mkdir /boot
    mkdir /sdcard
    mkdir /sd-ext
    mkdir /datadata
    mkdir /emmc
    mkdir /system
    mkdir /data
    mkdir /cache
    mount /tmp /tmp tmpfs

on fs
    mount ext4 /dev/block/mmcblk0p13 /cache wait noatime nosuid nodev data=ordered noauto_da_alloc
    mount vfat /dev/block/mmcblk0p15 /sdcard


on boot
# basic network init
    ifup lo
    hostname localhost
    domainname localdomain

# Exec bootsel, it will reboot at the end if default boot
    exec /sbin/bootsel
    class_start default

on charger
    class_start charger


## Daemon processes to be run by init.
##
service ueventd /sbin/ueventd
    critical

on property:ro.debuggable=1
    start console

# adbd is controlled via property triggers in init.<platform>.usb.rc
service adbd /sbin/adbd recovery

# service recovery /sbin/strace -F -f  -o /cache/strace_ /sbin/recovery
service recovery /sbin/recovery
